{"Graph":{"adjacencyMap":{"juval-lowy":{"righting-software":["folge",[]],"allure-of-the-free-lunch":["folge",[]]},"oauth-1.0-vs-2.0-vs-2.1":{"oauth-1.0s-proof-of-possession":["folge",[]],"what-oauth-2.1-brings-to-the-table":["folge",[]]},"linux-memory-nodes":{"linux-memory-zones":["folge",[]]},"programming-requires-math":{},"creating-a-lasting-go-project":{"what-to-focus-on-in-a-go-project":["folge",[]],"when-to-use-structs-or-interfaces":["folge",[]],"documenting-go-packages":["folge",[]],"qualities-of-a-good-foss-project":["folge",[]],"splitting-up-code-into-internal-packages":["folge",[]]},"make-goroutines-safely-share-memory":{"make-goroutines-wait-for-each-other":["cf",[]]},"issues-with-the-manager":{"volatility-decomposition":["folgeinv",[]],"no-one-understands-they-are-killing-projects":["cf",[]],"functional-decomposition":["folgeinv",[]]},"electrician-vs-electrical-engineer":{"never-change-a-plugs-amperage":["folge",[]]},"folklore":{"song-of-the-siren":["folge",[]]},"set":{},"volatility-decomposition-issues":{"issues-with-the-manager":["folge",[]],"no-one-understands-they-are-killing-projects":["folge",[]],"overdoing-volatility-decomposition":["folge",[]],"volatility-decomposition-is-no-guaranteed-win":["folge",[]],"issues-with-repeating-design-misstakes":["folge",[]]},"what-to-focus-on-in-a-go-project":{"volatility-decomposition":["folge",[]],"documenting-go-packages":["folge",[]]},"calculating-amperage-for-plugs":{"never-change-a-plugs-amperage":["folge",[]]},"advanced-words-from-elantris":{},"righting-software":{"juval-lowy":["folgeinv",[]],"volatility-decomposition":["folge",[]],"functional-decomposition":["folge",[]]},"README":{},"rob-pike":{"go":["folge",[]]},"volatility-decomposition":{"juval-lowy":["folgeinv",[]],"issues-with-the-manager":["cf",[]],"volatility-decomposition-issues":["folge",[]],"righting-software":["folgeinv",[]],"no-one-understands-they-are-killing-projects":["cf",[]],"elecricity-is-extreamly-volatile":["folge",[]],"finding-a-systems-components":["folge",[]],"stocks-trading-service-using-volatility-decomposition":["folge",[]],"finding-the-nature-of-your-buisness":["folge",[]],"getting-good-at-volatility-decomposition":["folge",[]],"overdoing-volatility-decomposition":["cf",[]],"volatility-decomposition-is-no-guaranteed-win":["cf",[]],"finding-a-systems-volatilities":["folge",[]],"allure-of-the-free-lunch":["folge",[]],"functional-decomposition":["cf",[]],"designing-software-vs-hardware":["cf",[]],"volatilities-and-components-of-pumping-blood":["folge",[]],"issues-with-repeating-design-misstakes":["cf",[]]},"linux-memory-page-mapping":{"linux-memory-swappiness":["folge",[]],"how-linux-uses-swap":["folge",[]]},"concatenating-readonlyspan":{},"never-change-a-plugs-amperage":{},"no-one-understands-they-are-killing-projects":{"functional-decomposition":["folgeinv",[]]},"zettelkasten":{},"stocks-trading-service-using-functional-decomposition":{"using-domain-driven-decomposition-to-build-a-house":["cf",[]],"functional-decomposition":["folgeinv",[]]},"using-domain-driven-decomposition-to-build-a-house":{"using-functional-decomposition-to-build-a-house":["cf",[]],"functional-decomposition":["cf",[]]},"mv_zettel-script":{},"go":{"creating-a-lasting-go-project":["folge",[]],"what-to-focus-on-in-a-go-project":["folge",[]],"vendoring-packages":["folge",[]],"parallelism-in-go":["folge",[]],"when-to-use-structs-or-interfaces":["folge",[]],"documenting-go-packages":["folge",[]],"packages":["folge",[]],"ways-of-importing-go-packages":["folge",[]],"goroutines":["folge",[]],"splitting-up-code-into-internal-packages":["folge",[]]},"red-team-vs-blue-team":{},"binary-search-tree-removing-a-node":{"binary-search-tree":["cf",[]],"binary-search-tree-enumeration":["cf",[]]},"vendoring-packages":{"ways-of-importing-go-packages":["folge",[]]},"parallelism-in-go":{"make-goroutines-safely-share-memory":["folge",[]],"go":["folgeinv",[]],"make-go-code-run-in-the-background":["folge",[]],"make-goroutines-wait-for-each-other":["folge",[]],"concurrency-vs-parallelism":["folgeinv",[]]},"stereotypes-of-an-engineer":{"programming-requires-math":["folge",[]],"regulations-are-written-in-blood":["folge",[]]},"regulations-are-written-in-blood":{},"elecricity-is-extreamly-volatile":{"volatility-decomposition":["folgeinv",[]]},"finding-a-systems-components":{"finding-a-systems-volatilities":["folgeinv",[]],"volatilities-and-components-of-pumping-blood":["folge",[]]},"movies":{"life-lesson-from-disney-and-pixars-soul":["folge",[]]},"people":{"juval-lowy":["folge",[]],"rob-pike":["folge",[]],"albert-einstein":["folge",[]]},"when-to-use-structs-or-interfaces":{"what-to-focus-on-in-a-go-project":["folge",[]]},"albert-einstein":{},"make-go-code-run-in-the-background":{},"stocks-trading-service-using-volatility-decomposition":{"volatility-decomposition":["folgeinv",[]],"stocks-trading-service-using-functional-decomposition":["cf",[]]},"finding-the-nature-of-your-buisness":{"volatility-decomposition":["folgeinv",[]]},"documenting-go-packages":{},"make-goroutines-wait-for-each-other":{},"foss":{"qualities-of-a-good-foss-project":["folge",[]],"users-prefer-foss-over-proprietary-tools":["folge",[]]},"electronics":{"calculating-amperage-for-plugs":["folge",[]],"never-change-a-plugs-amperage":["folge",[]]},"qualities-of-a-good-foss-project":{"users-prefer-foss-over-proprietary-tools":["folge",[]]},"memory":{"linux-memory-nodes":["folge",[]],"linux-memory-page-mapping":["folge",[]],"linux-memory-pages":["folge",[]],"linux-memory-zones":["folge",[]],"linux-memory-swappiness":["folge",[]],"how-linux-uses-swap":["folge",[]]},"packages":{"vendoring-packages":["folge",[]],"ways-of-importing-go-packages":["folge",[]],"splitting-up-code-into-internal-packages":["folge",[]]},"ways-of-importing-go-packages":{"vendoring-packages":["folge",[]]},"lang":{"go":["folge",[]],"csharp":["folge",[]],"sql":["folge",[]]},"concurrency-vs-parallelism":{},"oauth-1.0s-proof-of-possession":{},"getting-good-at-volatility-decomposition":{"issues-with-the-manager":["folge",[]],"volatility-decomposition":["folgeinv",[]],"finding-a-systems-volatilities":["folge",[]],"functional-decomposition":["cf",[]]},"what-oauth-2.1-brings-to-the-table":{"oauth-1.0s-proof-of-possession":["folge",[]]},"interchanging-readonlyspan-string-and-char-in-csharp":{"concatenating-readonlyspan":["folge",[]]},"linux-memory-pages":{"linux-memory-page-mapping":["folge",[]],"linux-memory-zones":["cf",[]]},"binary-search-tree":{"binary-search-tree-removing-a-node":["folge",[]],"binary-search-tree-enumeration":["folge",[]]},"code-design":{"volatility-decomposition":["folge",[]],"functional-decomposition":["folge",[]],"designing-software-vs-hardware":["folge",[]]},"linux-memory-zones":{"linux-memory-pages":["folge",[]]},"goroutines":{"make-goroutines-safely-share-memory":["folge",[]],"parallelism-in-go":["folge",[]],"make-go-code-run-in-the-background":["folge",[]],"make-goroutines-wait-for-each-other":["folge",[]]},"overdoing-volatility-decomposition":{"volatility-decomposition":["folgeinv",[]],"finding-a-systems-components":["cf",[]],"finding-the-nature-of-your-buisness":["folge",[]],"song-of-the-siren":["folge",[]],"functional-decomposition":["folge",[]]},"linux-memory-swappiness":{"linux-memory-page-mapping":["cf",[]]},"using-functional-decomposition-to-build-a-house":{"functional-decomposition":["cf",[]]},"designing-a-house-against-the-requirements":{"functional-decomposition":["cf",[]]},"volatility-decomposition-is-no-guaranteed-win":{"volatility-decomposition":["folgeinv",[]],"functional-decomposition":["folgeinv",[]]},"users-prefer-foss-over-proprietary-tools":{},"locking-down-to-vendors":{"functional-decomposition":["folgeinv",[]]},"finding-a-systems-volatilities":{"volatility-decomposition":["folgeinv",[]],"finding-a-systems-components":["folge",[]],"stocks-trading-service-using-volatility-decomposition":["folge",[]]},"binary-search-tree-enumeration":{},"song-of-the-siren":{"overdoing-volatility-decomposition":["folge",[]]},"allure-of-the-free-lunch":{"juval-lowy":["folgeinv",[]],"functional-decomposition":["folgeinv",[]]},"functional-decomposition":{"juval-lowy":["folgeinv",[]],"righting-software":["folgeinv",[]],"stocks-trading-service-using-functional-decomposition":["folge",[]],"using-domain-driven-decomposition-to-build-a-house":["folge",[]],"using-functional-decomposition-to-build-a-house":["folge",[]],"designing-a-house-against-the-requirements":["folge",[]],"locking-down-to-vendors":["folge",[]],"designing-software-vs-hardware":["folge",[]]},"csharp":{"concatenating-readonlyspan":["folge",[]],"interchanging-readonlyspan-string-and-char-in-csharp":["folge",[]]},"life-lesson-from-disney-and-pixars-soul":{},"designing-software-vs-hardware":{"using-domain-driven-decomposition-to-build-a-house":["folge",[]],"using-functional-decomposition-to-build-a-house":["folge",[]],"designing-a-house-against-the-requirements":["folge",[]],"allure-of-the-free-lunch":["cf",[]],"functional-decomposition":["cf",[]]},"index":{"programming-requires-math":["cf",[]],"electrician-vs-electrical-engineer":["cf",[]],"folklore":["cf",[]],"advanced-words-from-elantris":["cf",[]],"README":["cf",[]],"zettelkasten":["folge",[]],"mv_zettel-script":["folge",[]],"stereotypes-of-an-engineer":["cf",[]],"regulations-are-written-in-blood":["cf",[]],"movies":["cf",[]],"people":["cf",[]],"foss":["cf",[]],"electronics":["cf",[]],"lang":["cf",[]],"concurrency-vs-parallelism":["cf",[]],"code-design":["cf",[]],"linux":["cf",[]],"defining-an-engineer":["cf",[]],"security":["cf",[]],"data-structs":["cf",[]]},"linux":{"memory":["folge",[]]},"how-linux-uses-swap":{"linux-memory-page-mapping":["cf",[]],"linux-memory-swappiness":["folge",[]]},"defining-an-engineer":{"electrician-vs-electrical-engineer":["folge",[]],"stereotypes-of-an-engineer":["folge",[]]},"sql":{"has-one-vs-belongs-to":["folge",[]]},"volatilities-and-components-of-pumping-blood":{"volatility-decomposition":["folgeinv",[]]},"security":{"oauth-1.0-vs-2.0-vs-2.1":["folge",[]],"red-team-vs-blue-team":["folge",[]],"oauth-1.0s-proof-of-possession":["folge",[]],"what-oauth-2.1-brings-to-the-table":["folge",[]]},"has-one-vs-belongs-to":{"go":["folgeinv",[]]},"data-structs":{"set":["folge",[]],"binary-search-tree":["folge",[]]},"issues-with-repeating-design-misstakes":{"volatility-decomposition":["folgeinv",[]],"albert-einstein":["cf",[]],"functional-decomposition":["folgeinv",[]]},"splitting-up-code-into-internal-packages":{"what-to-focus-on-in-a-go-project":["folge",[]],"ways-of-importing-go-packages":["folge",[]]}},"vertices":{"juval-lowy":{"Path":"./people/juval-lowy.md","Slug":"juval-lowy","Date":"2021-01-28T19:03","ID":"juval-lowy","Meta":{"date":"2021-01-28T19:03","tags":["people/famous in software","root/people"]},"Title":"Juval Löwy"},"oauth-1.0-vs-2.0-vs-2.1":{"Path":"./security/oauth-1.0-vs-2.0-vs-2.1.md","Slug":"oauth-1.0-vs-2.0-vs-2.1","Date":"2021-01-26T19:44","ID":"oauth-1.0-vs-2.0-vs-2.1","Meta":{"date":"2021-01-26T19:44","tags":["root/security","security/managing login","security/oauth","security/securing authentication"]},"Title":"OAuth 1.0 vs 2.0 vs 2.1"},"linux-memory-nodes":{"Path":"./linux/memory/linux-memory-nodes.md","Slug":"linux-memory-nodes","Date":"2021-01-20T21:37","ID":"linux-memory-nodes","Meta":{"date":"2021-01-20T21:37","tags":["linux/how does memory work in linux","linux/what types of memory exists in linux","root/linux/memory"]},"Title":"Nodes"},"programming-requires-math":{"Path":"./programming-requires-math.md","Slug":"programming-requires-math","Date":"2021-01-21T19:14","ID":"programming-requires-math","Meta":{"date":"2021-01-21T19:14","tags":["life/what is an engineer","programming/do i need math to code","programming/use math in programming","programming/what does a programmer do","root"]},"Title":"Programming requires math"},"creating-a-lasting-go-project":{"Path":"./lang/go/creating-a-lasting-go-project.md","Slug":"creating-a-lasting-go-project","Date":"2021-01-24T12:24","ID":"creating-a-lasting-go-project","Meta":{"date":"2021-01-24T12:24","tags":["go/best practices in golang","go/writing idiomatic golang code","programming/how to succeed with open source","root/lang/go"]},"Title":"Creating a lasting Go project"},"make-goroutines-safely-share-memory":{"Path":"./lang/go/goroutines/make-goroutines-safely-share-memory.md","Slug":"make-goroutines-safely-share-memory","Date":"2021-01-30T13:41","ID":"make-goroutines-safely-share-memory","Meta":{"date":"2021-01-30T13:41","tags":["go/concurrent programming","root/lang/go/goroutines"]},"Title":"Make goroutines safely share memory"},"issues-with-the-manager":{"Path":"./code-design/volatility-decomposition/volatility-decomposition-issues/issues-with-the-manager.md","Slug":"issues-with-the-manager","Date":"2021-02-08T19:38","ID":"issues-with-the-manager","Meta":{"date":"2021-02-08T19:38","tags":["code design/issues with volatility decomposition","code design/what makes code design difficult","root/code-design/volatility-decomposition/volatility-decomposition-issues"]},"Title":"Issues with the manager"},"electrician-vs-electrical-engineer":{"Path":"./electrician-vs-electrical-engineer.md","Slug":"electrician-vs-electrical-engineer","Date":"2021-01-21T20:53","ID":"electrician-vs-electrical-engineer","Meta":{"date":"2021-01-21T20:53","tags":["life/what is an electrician","life/what is an engineer","root"]},"Title":"Electrician vs Electrical engineer"},"folklore":{"Path":"./folklore","Slug":"folklore","ID":"folklore","Meta":{"tags":["root"]},"Title":"folklore/"},"set":{"Path":"./data-structs/set.md","Slug":"set","Date":"2021-05-05T19:27","ID":"set","Meta":{"date":"2021-05-05T19:27","tags":["pluralsight","root/data-structs"]},"Title":"Set"},"volatility-decomposition-issues":{"Path":"./code-design/volatility-decomposition/volatility-decomposition-issues","Slug":"volatility-decomposition-issues","ID":"volatility-decomposition-issues","Meta":{"tags":["root/code-design/volatility-decomposition"]},"Title":"volatility-decomposition-issues/"},"what-to-focus-on-in-a-go-project":{"Path":"./lang/go/what-to-focus-on-in-a-go-project.md","Slug":"what-to-focus-on-in-a-go-project","Date":"2021-01-24T12:31","ID":"what-to-focus-on-in-a-go-project","Meta":{"date":"2021-01-24T12:31","tags":["go/best practices in golang","go/create a lasting go project","go/writing idiomatic golang code","root/lang/go"]},"Title":"What to focus on in a Go project"},"calculating-amperage-for-plugs":{"Path":"./electronics/calculating-amperage-for-plugs.md","Slug":"calculating-amperage-for-plugs","Date":"2021-01-17T21:29","ID":"calculating-amperage-for-plugs","Meta":{"date":"2021-01-17T21:29","tags":["life/mathmatics of volts","life/working with electricity","root/electronics"]},"Title":"Calculating amperage for plugs"},"advanced-words-from-elantris":{"Path":"./advanced-words-from-elantris.md","Slug":"advanced-words-from-elantris","Date":"2021-01-17T10:31","ID":"advanced-words-from-elantris","Meta":{"date":"2021-01-17T10:31","tags":["natural lang/advanced english words","root"]},"Title":"Advanced words from Elantris"},"righting-software":{"Path":"./people/juval-lowy/righting-software.md","Slug":"righting-software","Date":"2021-01-30T16:29","ID":"righting-software","Meta":{"date":"2021-01-30T16:29","tags":["root/people/juval-lowy","stub"]},"Title":"Righting software"},"README":{"Path":"./README.md","Slug":"README","ID":"README","Meta":{"tags":["root"]},"Title":"My zettelkasten"},"rob-pike":{"Path":"./people/rob-pike.md","Slug":"rob-pike","Date":"2021-02-08T19:15","ID":"rob-pike","Meta":{"date":"2021-02-08T19:15","tags":["people/famous in software","root/people"]},"Title":"Rob Pike"},"volatility-decomposition":{"Path":"./code-design/volatility-decomposition.md","Slug":"volatility-decomposition","Date":"2021-01-28T20:00","ID":"volatility-decomposition","Meta":{"date":"2021-01-28T20:00","dirtree":{"display":false},"tags":["programming/how to design software","root/code-design","stub"]},"Title":"Volatility decomposition"},"linux-memory-page-mapping":{"Path":"./linux/memory/linux-memory-page-mapping.md","Slug":"linux-memory-page-mapping","Date":"2021-01-20T18:32","ID":"linux-memory-page-mapping","Meta":{"date":"2021-01-20T18:32","tags":["linux/how does memory work in linux","linux/what types of memory exists in linux","root/linux/memory"]},"Title":"Page mapping"},"concatenating-readonlyspan":{"Path":"./lang/csharp/concatenating-readonlyspan.md","Slug":"concatenating-readonlyspan","Date":"2021-01-15T22:09","ID":"concatenating-readonlyspan","Meta":{"date":"2021-01-15T22:09","tags":["prog lang/advanced c# techniques","programming/optimize memory usage","programming/working with strings","root/lang/csharp"]},"Title":"Concatenating ReadOnlySpan<T>"},"never-change-a-plugs-amperage":{"Path":"./electronics/never-change-a-plugs-amperage.md","Slug":"never-change-a-plugs-amperage","Date":"2021-01-17T21:32","ID":"never-change-a-plugs-amperage","Meta":{"date":"2021-01-17T21:32","tags":["life/avoiding disaster","life/not burning the house down","life/working with electricity","root/electronics"]},"Title":"Never change a plugs amperage"},"no-one-understands-they-are-killing-projects":{"Path":"./code-design/volatility-decomposition/volatility-decomposition-issues/no-one-understands-they-are-killing-projects.md","Slug":"no-one-understands-they-are-killing-projects","Date":"2021-02-08T20:11","ID":"no-one-understands-they-are-killing-projects","Meta":{"date":"2021-02-08T20:11","tags":["code design/issues with volatility decomposition","code design/what makes code design difficult","programming/why functional decomposition is bad","root/code-design/volatility-decomposition/volatility-decomposition-issues"]},"Title":"No one understands they are killing projects"},"zettelkasten":{"Path":"./zettelkasten.md","Slug":"zettelkasten","Date":"2021-01-14T20:43","ID":"zettelkasten","Meta":{"date":"2021-01-14T20:43","tags":["productivity/measuring success","productivity/note taking","productivity/store knowledge","root"]},"Title":"Zettelkasten"},"stocks-trading-service-using-functional-decomposition":{"Path":"./code-design/functional-decomposition/stocks-trading-service-using-functional-decomposition.md","Slug":"stocks-trading-service-using-functional-decomposition","Date":"2021-01-30T21:19","ID":"stocks-trading-service-using-functional-decomposition","Meta":{"date":"2021-01-30T21:19","tags":["programming/analogy of code design/functional decomposition","programming/when buissness logic lands in the frontend","programming/why functional decomposition is bad","root/code-design/functional-decomposition"]},"Title":"Stocks trading service using functional decomposition"},"using-domain-driven-decomposition-to-build-a-house":{"Path":"./code-design/functional-decomposition/using-domain-driven-decomposition-to-build-a-house.md","Slug":"using-domain-driven-decomposition-to-build-a-house","Date":"2021-01-28T20:01","ID":"using-domain-driven-decomposition-to-build-a-house","Meta":{"date":"2021-01-28T20:01","tags":["programming/analogy of code design/functional decomposition","programming/designing hardware as if it was software","programming/incorrectly designing a house","programming/why functional decomposition is bad","root/code-design/functional-decomposition"]},"Title":"Using domain-driven decomposition to build a house"},"mv_zettel-script":{"Path":"./mv_zettel-script.md","Slug":"mv_zettel-script","Date":"2021-01-30T15:59","ID":"mv_zettel-script","Meta":{"date":"2021-01-30T15:59","tags":["root"]},"Title":"mv_zettel.sh script"},"go":{"Path":"./lang/go.md","Slug":"go","Date":"2021-01-24T14:54","ID":"go","Meta":{"date":"2021-01-24T14:54","dirtree":{"display":false},"tags":["go/best practices in golang","go/writing idiomatic golang code","root/lang"]},"Title":"Go"},"red-team-vs-blue-team":{"Path":"./security/red-team-vs-blue-team.md","Slug":"red-team-vs-blue-team","Date":"2020-02-18T20:22","ID":"red-team-vs-blue-team","Meta":{"date":"2020-02-18T20:22","tags":["root/security","title/incident responder","title/penetration tester","title/security analyst"]},"Title":"Red team vs blue team"},"binary-search-tree-removing-a-node":{"Path":"./data-structs/binary-search-tree/binary-search-tree-removing-a-node.md","Slug":"binary-search-tree-removing-a-node","Date":"2021-04-22T20:04","ID":"binary-search-tree-removing-a-node","Meta":{"date":"2021-04-22T20:04","tags":["root/data-structs/binary-search-tree"]},"Title":"Binary search tree - Removing a node"},"vendoring-packages":{"Path":"./lang/go/packages/vendoring-packages.md","Slug":"vendoring-packages","Date":"2021-01-24T14:53","ID":"vendoring-packages","Meta":{"date":"2021-01-24T14:53","tags":["go/best practices in golang","go/using packages in go","go/writing idiomatic golang code","root/lang/go/packages"]},"Title":"Vendoring packages"},"parallelism-in-go":{"Path":"./lang/go/goroutines/parallelism-in-go.md","Slug":"parallelism-in-go","Date":"2021-01-30T13:01","ID":"parallelism-in-go","Meta":{"date":"2021-01-30T13:01","tags":["go/best practices in golang","go/writing idiomatic golang code","root/lang/go/goroutines"]},"Title":"Parallelism in Go"},"stereotypes-of-an-engineer":{"Path":"./stereotypes-of-an-engineer.md","Slug":"stereotypes-of-an-engineer","Date":"2021-01-21T20:15","ID":"stereotypes-of-an-engineer","Meta":{"date":"2021-01-21T20:15","tags":["life/what is an engineer","root"]},"Title":"Stereotypes of an engineer"},"regulations-are-written-in-blood":{"Path":"./regulations-are-written-in-blood.md","Slug":"regulations-are-written-in-blood","Date":"2021-01-21T19:38","ID":"regulations-are-written-in-blood","Meta":{"date":"2021-01-21T19:38","tags":["life/what is the purpose of certificates","life/why are regulations made","root"]},"Title":"Regulations are written in blood"},"elecricity-is-extreamly-volatile":{"Path":"./code-design/volatility-decomposition/elecricity-is-extreamly-volatile.md","Slug":"elecricity-is-extreamly-volatile","Date":"2021-02-04T20:24","ID":"elecricity-is-extreamly-volatile","Meta":{"date":"2021-02-04T20:24","tags":["programming/analogy of code design/volatility decomposition","root/code-design/volatility-decomposition"]},"Title":"Electricity is extreamly volatile"},"finding-a-systems-components":{"Path":"./code-design/volatility-decomposition/finding-a-systems-components.md","Slug":"finding-a-systems-components","Date":"2021-02-08T20:55","ID":"finding-a-systems-components","Meta":{"date":"2021-02-08T20:55","tags":["code design/how to do volatility decomposition","root/code-design/volatility-decomposition"]},"Title":"Finding a system’s components"},"movies":{"Path":"./movies","Slug":"movies","ID":"movies","Meta":{"tags":["root"]},"Title":"movies/"},"people":{"Path":"./people","Slug":"people","ID":"people","Meta":{"tags":["root"]},"Title":"people/"},"when-to-use-structs-or-interfaces":{"Path":"./lang/go/when-to-use-structs-or-interfaces.md","Slug":"when-to-use-structs-or-interfaces","Date":"2021-01-24T13:28","ID":"when-to-use-structs-or-interfaces","Meta":{"date":"2021-01-24T13:28","tags":["go/best practices in golang","go/create a lasting go project","go/writing idiomatic golang code","root/lang/go"]},"Title":"When to use structs or interfaces"},"albert-einstein":{"Path":"./people/albert-einstein.md","Slug":"albert-einstein","Date":"2021-02-08T19:55","ID":"albert-einstein","Meta":{"date":"2021-02-08T19:55","tags":["root/people","stub"]},"Title":"Albert Einstein"},"make-go-code-run-in-the-background":{"Path":"./lang/go/goroutines/make-go-code-run-in-the-background.md","Slug":"make-go-code-run-in-the-background","Date":"2021-01-30T13:37","ID":"make-go-code-run-in-the-background","Meta":{"date":"2021-01-30T13:37","tags":["go/concurrent programming","root/lang/go/goroutines"]},"Title":"Make go code run in the background"},"stocks-trading-service-using-volatility-decomposition":{"Path":"./code-design/volatility-decomposition/stocks-trading-service-using-volatility-decomposition.md","Slug":"stocks-trading-service-using-volatility-decomposition","Date":"2021-02-08T20:38","ID":"stocks-trading-service-using-volatility-decomposition","Meta":{"date":"2021-02-08T20:38","tags":["root/code-design/volatility-decomposition","stub"]},"Title":"Stocks trading service using volatility decomposition"},"finding-the-nature-of-your-buisness":{"Path":"./code-design/volatility-decomposition/finding-the-nature-of-your-buisness.md","Slug":"finding-the-nature-of-your-buisness","Date":"2021-02-15T18:59","ID":"finding-the-nature-of-your-buisness","Meta":{"date":"2021-02-15T18:59","tags":["code design/how to do volatility decomposition","root/code-design/volatility-decomposition"]},"Title":"Finding the nature of your buisness"},"documenting-go-packages":{"Path":"./lang/go/documenting-go-packages.md","Slug":"documenting-go-packages","Date":"2021-01-24T11:35","ID":"documenting-go-packages","Meta":{"date":"2021-01-24T11:35","tags":["go/best practices in golang","go/create a lasting go project","go/writing idiomatic golang code","programming/writing documentation","root/lang/go"]},"Title":"Documenting Go packages"},"make-goroutines-wait-for-each-other":{"Path":"./lang/go/goroutines/make-goroutines-wait-for-each-other.md","Slug":"make-goroutines-wait-for-each-other","Date":"2021-01-30T13:36","ID":"make-goroutines-wait-for-each-other","Meta":{"date":"2021-01-30T13:36","tags":["go/concurrent programming","root/lang/go/goroutines"]},"Title":"Make goroutines wait for each other"},"foss":{"Path":"./foss","Slug":"foss","ID":"foss","Meta":{"tags":["root"]},"Title":"foss/"},"electronics":{"Path":"./electronics","Slug":"electronics","ID":"electronics","Meta":{"tags":["root"]},"Title":"electronics/"},"qualities-of-a-good-foss-project":{"Path":"./foss/qualities-of-a-good-foss-project.md","Slug":"qualities-of-a-good-foss-project","Date":"2021-01-18T18:16","ID":"qualities-of-a-good-foss-project","Meta":{"date":"2021-01-18T18:16","tags":["programming/how to succeed with open source","root/foss"]},"Title":"Qualities of a good FOSS project"},"memory":{"Path":"./linux/memory.md","Slug":"linux-memory-layout","Date":"2021-01-20T21:30","ID":"memory","Meta":{"slug":"linux-memory-layout","date":"2021-01-20T21:30","dirtree":{"display":false},"tags":["linux/how does memory work in linux","linux/what types of memory exists in linux","root/linux"]},"Title":"Linux memory layout"},"packages":{"Path":"./lang/go/packages","Slug":"packages","ID":"packages","Meta":{"tags":["root/lang/go"]},"Title":"packages/"},"ways-of-importing-go-packages":{"Path":"./lang/go/packages/ways-of-importing-go-packages.md","Slug":"ways-of-importing-go-packages","Date":"2021-01-24T14:33","ID":"ways-of-importing-go-packages","Meta":{"date":"2021-01-24T14:33","tags":["go/best practices in golang","go/using packages in go","go/writing idiomatic golang code","root/lang/go/packages"]},"Title":"Ways of importing Go packages"},"lang":{"Path":"./lang","Slug":"lang","ID":"lang","Meta":{"tags":["root"]},"Title":"lang/"},"concurrency-vs-parallelism":{"Path":"./concurrency-vs-parallelism.md","Slug":"concurrency-vs-parallelism","Date":"2021-01-30T13:02","ID":"concurrency-vs-parallelism","Meta":{"date":"2021-01-30T13:02","tags":["programming/supporting concurrency","root"]},"Title":"Concurrency vs parallelism"},"oauth-1.0s-proof-of-possession":{"Path":"./security/oauth-1.0s-proof-of-possession.md","Slug":"oauth-1.0s-proof-of-possession","Date":"2021-01-26T20:08","ID":"oauth-1.0s-proof-of-possession","Meta":{"date":"2021-01-26T20:08","tags":["root/security","security/managing login","security/oauth","security/proof of possession","security/securing authentication"]},"Title":"OAuth 1.0’s proof of possession"},"getting-good-at-volatility-decomposition":{"Path":"./code-design/volatility-decomposition/getting-good-at-volatility-decomposition.md","Slug":"getting-good-at-volatility-decomposition","Date":"2021-02-17T19:29","ID":"getting-good-at-volatility-decomposition","Meta":{"date":"2021-02-17T19:29","tags":["code design/finding use-cases","code design/how to be a good designer","code design/how to do volatility decomposition","root/code-design/volatility-decomposition"]},"Title":"Getting good at volatility decomposition"},"what-oauth-2.1-brings-to-the-table":{"Path":"./security/what-oauth-2.1-brings-to-the-table.md","Slug":"what-oauth-2.1-brings-to-the-table","Date":"2021-01-26T20:12","ID":"what-oauth-2.1-brings-to-the-table","Meta":{"date":"2021-01-26T20:12","tags":["natural lang/advanced english words","root/security","security/managing login","security/oauth","security/securing authentication"]},"Title":"What OAuth 2.1 brings to the table"},"interchanging-readonlyspan-string-and-char-in-csharp":{"Path":"./lang/csharp/interchanging-readonlyspan-string-and-char-in-csharp.md","Slug":"interchanging-readonlyspan-string-and-char-in-csharp","Date":"2021-01-15T21:38","ID":"interchanging-readonlyspan-string-and-char-in-csharp","Meta":{"date":"2021-01-15T21:38","tags":["prog lang/advanced c# techniques","programming/optimize memory usage","programming/quality of life","programming/working with strings","root/lang/csharp"]},"Title":"Interchanging ReadOnlySpan<T>, string, and char[] in C#"},"linux-memory-pages":{"Path":"./linux/memory/linux-memory-pages.md","Slug":"linux-memory-pages","Date":"2021-01-20T21:23","ID":"linux-memory-pages","Meta":{"date":"2021-01-20T21:23","tags":["linux/how does memory work in linux","linux/what types of memory exists in linux","root/linux/memory"]},"Title":"Pages"},"binary-search-tree":{"Path":"./data-structs/binary-search-tree.md","Slug":"binary-search-tree","Date":"2021-04-22T20:04","ID":"binary-search-tree","Meta":{"date":"2021-04-22T20:04","tags":["pluralsight","root/data-structs"]},"Title":"Binary search tree"},"code-design":{"Path":"./code-design","Slug":"code-design","ID":"code-design","Meta":{"tags":["root"]},"Title":"code-design/"},"linux-memory-zones":{"Path":"./linux/memory/linux-memory-zones.md","Slug":"linux-memory-zones","Date":"2021-01-20T21:01","ID":"linux-memory-zones","Meta":{"date":"2021-01-20T21:01","tags":["linux/how does memory work in linux","linux/what types of memory exists in linux","root/linux/memory"]},"Title":"Zones"},"goroutines":{"Path":"./lang/go/goroutines","Slug":"goroutines","ID":"goroutines","Meta":{"tags":["root/lang/go"]},"Title":"goroutines/"},"overdoing-volatility-decomposition":{"Path":"./code-design/volatility-decomposition/volatility-decomposition-issues/overdoing-volatility-decomposition.md","Slug":"overdoing-volatility-decomposition","Date":"2021-02-15T19:35","ID":"overdoing-volatility-decomposition","Meta":{"date":"2021-02-15T19:35","tags":["code design/issues with volatility decomposition","root/code-design/volatility-decomposition/volatility-decomposition-issues"]},"Title":"Overdoing volatility decomposition"},"linux-memory-swappiness":{"Path":"./linux/memory/linux-memory-swappiness.md","Slug":"linux-memory-swappiness","Date":"2021-01-20T19:08","ID":"linux-memory-swappiness","Meta":{"date":"2021-01-20T19:08","tags":["linux/control the swap memory","linux/how does memory work in linux","linux/the vm.swappiness config","linux/understanding swap and swappiness","root/linux/memory"]},"Title":"Swappiness"},"using-functional-decomposition-to-build-a-house":{"Path":"./code-design/functional-decomposition/using-functional-decomposition-to-build-a-house.md","Slug":"using-functional-decomposition-to-build-a-house","Date":"2021-01-28T19:35","ID":"using-functional-decomposition-to-build-a-house","Meta":{"date":"2021-01-28T19:35","tags":["programming/analogy of code design/functional decomposition","programming/designing hardware as if it was software","programming/incorrectly designing a house","programming/why functional decomposition is bad","root/code-design/functional-decomposition"]},"Title":"Using functional decomposition to build a house"},"designing-a-house-against-the-requirements":{"Path":"./code-design/functional-decomposition/designing-a-house-against-the-requirements.md","Slug":"designing-a-house-against-the-requirements","Date":"2021-01-28T20:30","ID":"designing-a-house-against-the-requirements","Meta":{"date":"2021-01-28T20:30","tags":["programming/analogy of code design/functional decomposition","programming/designing hardware as if it was software","programming/incorrectly designing a house","programming/why functional decomposition is bad","root/code-design/functional-decomposition"]},"Title":"Designing a house against the requirements"},"volatility-decomposition-is-no-guaranteed-win":{"Path":"./code-design/volatility-decomposition/volatility-decomposition-issues/volatility-decomposition-is-no-guaranteed-win.md","Slug":"volatility-decomposition-is-no-guaranteed-win","Date":"2021-02-08T19:38","ID":"volatility-decomposition-is-no-guaranteed-win","Meta":{"date":"2021-02-08T19:38","tags":["code design/issues with volatility decomposition","code design/what makes code design difficult","root/code-design/volatility-decomposition/volatility-decomposition-issues"]},"Title":"Volatility decomposition is no guaranteed win"},"users-prefer-foss-over-proprietary-tools":{"Path":"./foss/users-prefer-foss-over-proprietary-tools.md","Slug":"users-prefer-foss-over-proprietary-tools","Date":"2021-01-18T18:35","ID":"users-prefer-foss-over-proprietary-tools","Meta":{"date":"2021-01-18T18:35","tags":["programming/inviting users to your project","programming/why is open source better","root/foss"]},"Title":"Users prefer FOSS over proprietary tools, even at the cost of quality"},"locking-down-to-vendors":{"Path":"./code-design/functional-decomposition/locking-down-to-vendors.md","Slug":"locking-down-to-vendors","Date":"2021-01-31T11:35","ID":"locking-down-to-vendors","Meta":{"date":"2021-01-31T11:35","tags":["programming/how not to design software","programming/why functional decomposition is bad","root/code-design/functional-decomposition"]},"Title":"Locking in to vendors"},"finding-a-systems-volatilities":{"Path":"./code-design/volatility-decomposition/finding-a-systems-volatilities.md","Slug":"finding-a-systems-volatilities","Date":"2021-02-08T19:38","ID":"finding-a-systems-volatilities","Meta":{"date":"2021-02-08T19:38","tags":["code design/how to do volatility decomposition","root/code-design/volatility-decomposition"]},"Title":"Finding a system’s volatilities"},"binary-search-tree-enumeration":{"Path":"./data-structs/binary-search-tree/binary-search-tree-enumeration.md","Slug":"binary-search-tree-enumeration","Date":"2021-04-22T20:04","ID":"binary-search-tree-enumeration","Meta":{"date":"2021-04-22T20:04","tags":["root/data-structs/binary-search-tree"]},"Title":"Binary search tree enumeration"},"song-of-the-siren":{"Path":"./folklore/song-of-the-siren.md","Slug":"song-of-the-siren","Date":"2021-02-15T19:50","ID":"song-of-the-siren","Meta":{"date":"2021-02-15T19:50","tags":["root/folklore","stub"]},"Title":"Song of the siren"},"allure-of-the-free-lunch":{"Path":"./people/juval-lowy/allure-of-the-free-lunch.md","Slug":"allure-of-the-free-lunch","Date":"2021-01-28T20:47","ID":"allure-of-the-free-lunch","Meta":{"date":"2021-01-28T20:47","tags":["root/people/juval-lowy","stub"]},"Title":"Allure of the free lunch"},"functional-decomposition":{"Path":"./code-design/functional-decomposition.md","Slug":"functional-decomposition","Date":"2021-01-28T20:00","ID":"functional-decomposition","Meta":{"date":"2021-01-28T20:00","dirtree":{"display":false},"tags":["programming/how not to design software","root/code-design"]},"Title":"Functional decomposition"},"csharp":{"Path":"./lang/csharp","Slug":"csharp","ID":"csharp","Meta":{"tags":["root/lang"]},"Title":"csharp/"},"life-lesson-from-disney-and-pixars-soul":{"Path":"./movies/life-lesson-from-disney-and-pixars-soul.md","Slug":"life-lesson-from-disney-and-pixars-soul","Date":"2021-01-17T12:31","ID":"life-lesson-from-disney-and-pixars-soul","Meta":{"date":"2021-01-17T12:31","tags":["life/finding purpose in life","productivity/dealing with obsession","productivity/measuring success","root/movies"]},"Title":"Life lesson from Disney and Pixar’s Soul"},"designing-software-vs-hardware":{"Path":"./code-design/designing-software-vs-hardware.md","Slug":"designing-software-vs-hardware","Date":"2021-01-30T16:00","ID":"designing-software-vs-hardware","Meta":{"date":"2021-01-30T16:00","tags":["programming/analogy of code design/functional decomposition","root/code-design"]},"Title":"Designing software vs hardware"},"index":{"Path":"./index.md","Slug":"index","Date":"2021-01-14T12:35","ID":"index","Meta":{"date":"2021-01-14T12:35","dirtree":{"display":false},"tags":[]},"Title":"Wiki of Kalle"},"linux":{"Path":"./linux","Slug":"linux","ID":"linux","Meta":{"tags":["root"]},"Title":"linux/"},"how-linux-uses-swap":{"Path":"./linux/memory/how-linux-uses-swap.md","Slug":"how-linux-uses-swap","Date":"2021-01-20T19:29","ID":"how-linux-uses-swap","Meta":{"date":"2021-01-20T19:29","tags":["linux/how does linux swap memory","linux/how does memory work in linux","linux/understanding swap and swappiness","root/linux/memory"]},"Title":"How Linux uses swap"},"defining-an-engineer":{"Path":"./defining-an-engineer.md","Slug":"defining-an-engineer","Date":"2021-01-21T20:07","ID":"defining-an-engineer","Meta":{"date":"2021-01-21T20:07","tags":["life/what is an engineer","root"]},"Title":"Defining an engineer"},"sql":{"Path":"./lang/sql","Slug":"sql","ID":"sql","Meta":{"tags":["root/lang"]},"Title":"sql/"},"volatilities-and-components-of-pumping-blood":{"Path":"./code-design/volatility-decomposition/volatilities-and-components-of-pumping-blood.md","Slug":"volatilities-and-components-of-pumping-blood","Date":"2021-02-04T20:36","ID":"volatilities-and-components-of-pumping-blood","Meta":{"date":"2021-02-04T20:36","tags":["programming/analogy of code design/volatility decomposition","root/code-design/volatility-decomposition"]},"Title":"Volatilities and components of pumping blood"},"security":{"Path":"./security","Slug":"security","ID":"security","Meta":{"tags":["root"]},"Title":"security/"},"has-one-vs-belongs-to":{"Path":"./lang/sql/has-one-vs-belongs-to.md","Slug":"has-one-vs-belongs-to","Date":"2021-11-04T09:51","ID":"has-one-vs-belongs-to","Meta":{"date":"2021-11-04T09:51","tags":["go/gorm","root/lang/sql","sql/relations"]},"Title":"Has-One vs Belongs-To"},"data-structs":{"Path":"./data-structs","Slug":"data-structs","ID":"data-structs","Meta":{"tags":["root"]},"Title":"data-structs/"},"issues-with-repeating-design-misstakes":{"Path":"./code-design/volatility-decomposition/volatility-decomposition-issues/issues-with-repeating-design-misstakes.md","Slug":"issues-with-repeating-design-misstakes","Date":"2021-02-08T19:55","ID":"issues-with-repeating-design-misstakes","Meta":{"date":"2021-02-08T19:55","tags":["code design/issues with volatility decomposition","code design/what makes code design difficult","root/code-design/volatility-decomposition/volatility-decomposition-issues"]},"Title":"Issues with repeating design misstakes"},"splitting-up-code-into-internal-packages":{"Path":"./lang/go/packages/splitting-up-code-into-internal-packages.md","Slug":"splitting-up-code-into-internal-packages","Date":"2021-01-24T14:14","ID":"splitting-up-code-into-internal-packages","Meta":{"date":"2021-01-24T14:14","tags":["go/best practices in golang","go/create a lasting go project","go/using packages in go","go/what is the internal folder in go projects","go/writing idiomatic golang code","root/lang/go/packages"]},"Title":"Splitting up code into internal packages"}}},"NeuronVersion":"1.9.35.3","Config":{"editUrl":"https://github.com/jilleJr/wiki/blob/main/","plugins":["neuronignore","links","tags","uptree","dirtree"],"siteBaseUrl":"https://wiki.jillejr.tech","author":"Kalle Jillheden","siteTitle":"Wiki of Kalle","theme":"teal"},"Errors":{}}